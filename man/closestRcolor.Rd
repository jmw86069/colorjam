% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorjam-closest-color.R
\name{closestRcolor}
\alias{closestRcolor}
\title{Find the closest R color}
\usage{
closestRcolor(
  x,
  colorSet = colors(),
  Cgrey = getOption("jam.Cgrey", 5),
  C_min = Cgrey,
  showPalette = FALSE,
  colorModel = c("hcl", "LUV"),
  Hwt = 2.5,
  Cwt = 1,
  Lwt = 4,
  warpHue = TRUE,
  preset = "ryb",
  method = "maximum",
  returnType = c("color", "name", "match"),
  verbose = FALSE,
  ...
)
}
\arguments{
\item{x}{character vector of colors, either in hex format or any
valid color in R.}

\item{colorSet}{\code{character} vector of colors, by default includes
the R colors \code{grDevices::colors()}.}

\item{Cgrey, C_min}{\code{numeric} default 5, using \code{getOption("jamba.Cgrey", 5)},
the Chroma at which colors are considered "grey" ("gray").
\itemize{
\item \code{Cgrey} is applied to \code{colorSet}.
\item \code{C_min} is applied to \code{x}.
}

The purpose is for saturated colors to match saturated colors,
and non-saturated colors to match non-saturated colors.
Rules:
\itemize{
\item All non-grey colors \code{x} are compared with non-grey \code{colorSet}.
\item Grey colors \code{x} are compared with grey \code{colorSet},
therefore color Hue is not used.
\item Note \code{Cgrey} is an argument in \code{jamba::make_styles()}, and
\code{jamba::applyCLrange()} for similar use cases.
}}

\item{showPalette}{\code{logical} indicating whether to display the input
colors and resulting closest matching colors by using
\code{jamba::showColors()}.}

\item{colorModel}{\code{character} color model to use:
\itemize{
\item \code{"hcl"}: default, uses HCL provided by \code{jamba::col2hcl()} which
uses the equivalent of \code{colorspace::polarLUV()} and considers
color hues in terms of 360 degree angles along a color wheel.
\item \code{"LUV"}: uses CIELUV color space, provided by \code{colorspace::LUV()}
which encodes the angular color hue in 3-D Cartesian space,
allowing comparisons using Euclidean distance.
}}

\item{Hwt, Cwt, Lwt}{\code{numeric} relative weights for each dimension of
HCL colors, for the H, C, and L channels, respectively.}

\item{warpHue}{\code{logical} indicating whether to perform the hue warp
operation using \code{h2hw()} which improves the ability to match
colors between orange and green.}

\item{preset}{\code{character} string to define the color wheel used
when matching input colors \code{x} to colors in \code{colorSet}.
This preset is used with \code{h2hw()} and \code{hw2h()}.
The default \code{preset="ryb"} allows greatest distinction in colors
without imposing additional restrictions such as by \code{preset="dichromat"}
which would only match color-safe colors. The purpose here is
to identify and label colors based upon a reference set of colors.}

\item{method}{\code{character} string passed to \code{stats::dist()}. The default
\code{method="maximum"} works well for \code{colorModel="hcl"}, and
assigns distance using the largest distance across
the three color coordinates H, C, and L. It requires the best
overall match across all three coordinates rather than any weighted
combination of coordinate distances. Other methods in testing allowed
matches of different color hues when luminance and chroma values
were very similar.
With  \code{colorModel="LUV"} we recommend using \code{method="euclidean"},
which seems to work well with projected color coordinates
L, U, and V. The U, and V coordinates are roughly the angular
color hue projected into a flat plane, the L describing Luminance.}

\item{returnType}{\code{character} type of data to return:
\itemize{
\item \code{"color"} returns the color values in \code{colorSet}, which by default
are color names from \code{grDevices::colors()}
\item \code{"name"} returns \code{names(colorSet)} if they exist, otherwise
values from \code{colorSet}
\item \code{"match"} returns an integer vector as an index to \code{colorSet}
}}

\item{verbose}{\code{logical} whether to print verbose output.}
}
\value{
\code{character} vector of colors, optionally customized
by argument \code{returnType}.
}
\description{
Find the closest R color for a vector of colors
}
\details{
This function is intended as a relatively efficient method to compare
a set of colors to the named R colors provided by \code{grDevices::colors()}.

Color matching provides substantial improvements over similar functions
from other R packages. Notably, colors are matched using either
HCL or LUB color model by default, both of which provide vast
improvement over RGB color matching, due to better spacing of
colors, and increased resolution of color hue.

For \code{colorModel="HCL"} the coordinates are weighted to prioritize
matching color Hue above Chroma and Luminance. The distance method
by default uses \code{method="maximum"} which also emphasizes the lowest
distance in any of the three dimensions.
}
\examples{
closestRcolor(rainbowJam(12), showPalette=TRUE);

}
\seealso{
Other colorjam core: 
\code{\link{blend_colors}()},
\code{\link{closest_named_color}()},
\code{\link{color_complement}()},
\code{\link{colors_to_df}()},
\code{\link{group2colors}()},
\code{\link{rainbowJam}()},
\code{\link{sort_colors}()},
\code{\link{subset_colors}()}
}
\concept{colorjam core}
