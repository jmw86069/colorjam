% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorjam-huewarp.R
\name{h2hw}
\alias{h2hw}
\title{Convert standard hue to warped virtual hue}
\usage{
h2hw(
  h,
  h1 = NULL,
  h2 = NULL,
  direction = 1,
  preset = getOption("colorjam.preset", "custom"),
  ...
)
}
\arguments{
\item{h}{\code{numeric} vector of color hues between 0 and 360. These hues do
not need to be in sequential order.}

\item{h1, h2}{\code{numeric} vector of color hues, which by default are defined in
\code{h2hwOptions()}, but allowed here in cases where the global options
should be overridden but not modified.}

\item{direction}{\code{numeric} indicating the direction of \code{h1} HCL hue
relative to \code{h2} virtual hue:
\itemize{
\item \code{1} indicates both are increasing
\item \code{-1} indicates \code{h1} and \code{h2} differ in direction
}}

\item{preset}{\code{character} string with a named preset from
\code{colorjam_presets()}, for which the \code{h1},\code{h2},\code{direction} values will
be obtained.
When \code{preset="custom"} then \code{h1} and \code{h2} must be provided.}
}
\value{
\code{numeric} vector of hue values after applying the hue warp
operation.
}
\description{
Convert standard HCL hue to warped (virtual) hue by colorjam preset
}
\details{
This function is intended to convert from a vector of hue values to
the warped hues defined by \code{colorjam_presets()} for the given \code{preset}.

Each \code{preset} defines a custom set of color hues, for example:
\itemize{
\item converting RGB to RYB color wheel
\item converting RGB to the customized dichromat color wheel
\item reversing a color wheel
}

Note the input hue uses the standard HCL color hue as defined
by \code{colorspace::polarLUV()}, with values ranging between 0 and 360.
By this standard, 12.2 is defined as red, 120 is defined as green, and
245 is defined as blue.
}
\examples{
## Yellow when using an RGB color wheel is 60 degrees,
## but on an RYB color wheel is 120 degrees.
h2hw(60, preset="ryb");

# RGB colors are convenient, but are not ideal especially when blending
# colors. Note that blue and yellow have hues that differ by exactly 180
# degrees, meaning a hue average is as likely to be purple as green.
huesBY <- jamba::col2hcl(c("blue", "yellow"))["H",];
huesBY;

warpedHuesBY <- h2hw(huesBY, preset="ryb");
warpedHuesBY;

}
\seealso{
Other colorjam hue warp: 
\code{\link{add_colorjam_preset}()},
\code{\link{add_colorjam_step}()},
\code{\link{adjust_hue_warp}()},
\code{\link{approx_degrees}()},
\code{\link{colorjam_presets}()},
\code{\link{colorjam_steps}()},
\code{\link{display_degrees}()},
\code{\link{h2hwOptions}()},
\code{\link{hcl_to_hsl_hue}()},
\code{\link{hsl_to_hcl_hue}()},
\code{\link{hw2h}()},
\code{\link{mean_angle}()},
\code{\link{plot_colorjam_preset}()},
\code{\link{remap_colorjam_preset}()},
\code{\link{validate_colorjam_preset}()}

Other hue warp functions: 
\code{\link{h2hwOptions}()}
}
\concept{colorjam hue warp}
\concept{hue warp functions}
