% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorjam-huewarp.R
\name{h2hwOptions}
\alias{h2hwOptions}
\title{Get hue color warp options}
\usage{
h2hwOptions(
  h1 = getOption("h2hw.h1"),
  h2 = getOption("h2hw.h2"),
  preset = getOption("colorjam.preset", "custom"),
  preset_names = c("custom", "none", "dichromat", "rgb", "ryb", "ryb1", "ryb2", "ryb3"),
  default_preset = "dichromat",
  reset = FALSE,
  setOptions = c("FALSE", "TRUE", "ifnull"),
  verbose = FALSE,
  ...
)
}
\arguments{
\item{h1}{\code{numeric} vector of color hue values which represent
the "from" hue angles, also referred to as "hue warp" or "hw"
values. One example of a typical operation: one may want to
know the R hue for a particular red-yellow-blue hue.
In this scenario the \code{h1} "hue warp" is the red-yellow-blue hue,
and the "hue" is the R typical hue used in \code{colorspace::polarLUV()}
\code{grDevices::hcl()}, and \code{farver::convert_colour()}. For
evenly-spaced red-yellow-blue colors, one would define a sequence
of "hue warp" values from 0 to 360, then convert them to
the default hue used by other R functions.}

\item{h2}{\code{numeric} vector of color hue values which represent
the "to" hue angles, also referred to as "hue" or "h".}

\item{preset}{\code{character} string indicating whether to define
\code{h1}, and \code{h2} values based upon named presets:
\itemize{
\item \code{"custom"} uses values defined in \code{options("h2hw.h1")}
and \code{options("h2hw.h2")} if they exist, otherwise \code{default_preset}.
\item other \code{character} values obtained by \code{colorjam_presets()}, some
examples include:
\itemize{
\item \code{"dichromat"} (default) color wheel intended to be color-blind
friendly by omitting much of the green color region from the color
wheel, and by reviewing output by \code{dichromat::dichromat()}
\item \code{"ryb"} basic red-yellow-blue color wheel
\item \code{"ryb1"},\code{"ryb2"},\code{"ryb3"} experimental red-yellow-blue
alternative color wheels designed to emphasize various features
in the red-orange-yellow-green range to varying degrees.
\item \code{"rgb"} for the default R red-green-blue color wheel
}
}}

\item{preset_names}{\code{character} vector of valid \code{preset} values,
included only to make the values visible in the function arguments.}

\item{default_preset}{\code{character} string indicating which value
in \code{preset} should be used as the default when \code{reset=FALSE} and
\code{h1} and/or \code{h2} are not defined in \code{options()}.}

\item{reset}{logical whether to reset \code{h1} and \code{h2} values to the default
values as defined in \code{h1default} and \code{h2default}. When \code{reset=TRUE}
all other \code{preset} and \code{default_preset} arguments are ignored.}

\item{setOptions}{\code{character} or \code{logical} indicating whether to
update \code{options()} for \code{"h2hw.h1"} and \code{"h2hw.h2"}. When \code{"ifnull"}
the \code{options()} are only updated if they were previously \code{NULL}.}

\item{verbose}{logical whether to print verbose output}
}
\value{
list with names \code{h1} and \code{h2} containing numeric vectors
of hues between 0 and 360.
}
\description{
Get hue color warp options used to convert color wheels
}
\details{
This function retrieves and/or defines, the \code{h1} and \code{h2}
hue vectors used to convert between \code{h1} "hue warp", and
\code{h2} "actual hue".

The "actual" hue is used by standard R #' functions such as
\code{colorspace::polarLUV()}, \code{grDevices::hcl()}, and
\code{farver::convert_colour()}.

The mapping from \code{h1} to \code{h2} allows customization of the spacing
and order of colors, which allows emulation of a red-yellow-blue
color wheel for example.

The \code{h1} represents the color hue in terms of a degree angle ranging
from 0 to 360 - a full circle - for the observer. It is then
transformed to \code{h2} for use in generating actual R colors.
\itemize{
\item \code{colorjam_presets()} lists all recognized colorjam presets.
\item \code{add_colorjam_preset()} will add or overwrite a colorjam preset by name.
}

In general, most colorjam functions with argument \code{preset} will
follow this progression:
\itemize{
\item Argument \code{preset=getOption("colorjam.preset", "custom")}
which uses \code{preset} when defined, otherwise \code{"custom"}.
\item When this option matches a recognized preset name, the
corresponding \code{h1},\code{h2} values are used.
\item When \code{preset="custom"}, arguments \code{h1},\code{h2} will also
poll \code{getOption("h2hw.h1")} and \code{getOption("h2hw.h2")} for
default values.
\item When neither \code{h1},\code{h2} is defined, the argument
\code{default_preset="dichromat"} is used to obtain \code{h1},\code{h2} values.
}

To disable the warped hue mechanic, set \code{preset="rgb"} which
usess the default R color wheel with no adjustment.
\subsection{Details}{

The \code{h1},\code{h2} values are passed to \code{approx_degrees()} to convert
hue degree angles. See \code{adjust_hue_warp()} for detailed examples
of manipulating color warp values.
}
}
\examples{
h2hwOptions()
h2hw(60)

h2hwOptions(h1=c(0, 60,120,240,300,360),
   h2=c(0,120,180,240,280,360))
h2hw(300)

}
\seealso{
Other colorjam hue warp: 
\code{\link{add_colorjam_preset}()},
\code{\link{add_colorjam_step}()},
\code{\link{adjust_hue_warp}()},
\code{\link{approx_degrees}()},
\code{\link{colorjam_presets}()},
\code{\link{colorjam_steps}()},
\code{\link{display_degrees}()},
\code{\link{h2hw}()},
\code{\link{hw2h}()},
\code{\link{mean_angle}()}

Other hue warp functions: 
\code{\link{h2hw}()}
}
\concept{colorjam hue warp}
\concept{hue warp functions}
