% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorjam-huewarp.R
\name{h2hwOptions}
\alias{h2hwOptions}
\title{Get hue color warp options}
\usage{
h2hwOptions(
  h1 = getOption("h2hw.h1"),
  h2 = getOption("h2hw.h2"),
  preset = getOption("colorjam.preset", "custom"),
  preset_names = c("custom", "none", "dichromat", "rgb", "ryb", "ryb1", "ryb2", "ryb3"),
  default_preset = "dichromat",
  reset = FALSE,
  setOptions = c("ifnull", "TRUE", "FALSE"),
  h1default = NULL,
  h2default = NULL,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{h1}{\code{numeric} vector of color hue values which represent
the "from" hue angles, also referred to as "hue warp" or "hw"
values. One example of a typical operation: one may want to
know the R hue for a particular red-yellow-blue hue.
In this scenario the \code{h1} "hue warp" is the red-yellow-blue hue,
and the "hue" is the R typical hue used in \code{colorspace::polarLUV()}
\code{grDevices::hcl()}, and \code{farver::convert_colour()}. For
evenly-spaced red-yellow-blue colors, one would define a sequence
of "hue warp" values from 0 to 360, then convert them to
the default hue used by other R functions.}

\item{h2}{\code{numeric} vector of color hue values which represent
the "to" hue angles, also referred to as "hue" or "h".}

\item{preset}{\code{character} string indicating whether to define
\code{h1}, and \code{h2} values based upon named presets:
\itemize{
\item \code{"custom"} uses values defined in \code{options("h2hw.h1")}
and \code{options("h2hw.h2")} if they exist, otherwise \code{default_preset}.
\item \code{"ryb"} red-yellow-blue;
\code{"dichromat"} color wheel intended to be color-blind friendly
based upon simulated output as from the  \code{dichromat::dichromat()} package;
\item \code{"rgb"} or \code{"none"} both use the hue defined in R as red-green-blue;
\item \code{"ryb1"},\code{"ryb2"},\code{"ryb3"} experimental red-yellow-blue alternatives
that continue to modify the effect of the huge blue-green range
of hue angles.
}}

\item{preset_names}{\code{character} vector of valid \code{preset} values,
included only to make the values visible in the function arguments.}

\item{default_preset}{\code{character} string indicating which value
in \code{preset} should be used as the default when \code{reset=FALSE} and
\code{h1} and/or \code{h2} are not defined in \code{options()}.}

\item{reset}{logical whether to reset \code{h1} and \code{h2} values to the default
values as defined in \code{h1default} and \code{h2default}. When \code{reset=TRUE}
all other \code{preset} and \code{default_preset} arguments are ignored.}

\item{setOptions}{\code{character} or \code{logical} indicating whether to
update \code{options()} for \code{"h2hw.h1"} and \code{"h2hw.h2"}. When \code{"ifnull"}
the \code{options()} are only updated if they were previously \code{NULL}.}

\item{h1default, h2default}{deprecated and ignored in this version
of the function.}

\item{verbose}{logical whether to print verbose output}
}
\value{
list with names \code{h1} and \code{h2} containing numeric vectors
of hues between 0 and 360.
}
\description{
Get hue color warp options used to convert to and from warped hues
}
\details{
This function retrieves, and/or defines, the \code{h1} and \code{h2}
hue vectors used to convert between \code{h1} "hue warp", and
\code{h2} "default hue". The "default" hue is used by standard R
functions such as \code{colorspace::polarLUV()}
\code{grDevices::hcl()}, and \code{farver::convert_colour()},
based upon the red-green-blue color wheel in typical computer
video displays.

The \code{h1} values may represent colors on red-yellow-blue color wheel
hue, while \code{h2} represents the corresponding hue in R "default hue"
space. The conversion is non-linear, therefore it warps (bends) the
color range accordingly.

The output values from this function are used with \code{approx_degrees()}
which either performs the conversion, or returns a function to
perform the conversion.

There are three \code{options()} used when available, intended to help
custom states to have persistence across other function calls.
\enumerate{
\item \code{options("colorjam.preset")} which keeps track of the current
color warp preset.
\item \code{options("h2hw.h1")} defines the \code{h1} value.
\item \code{optinos("h2hw.h2")} defines the \code{h2} value.
}

Note that \code{options("h2hw.h1")} and \code{options("h2hw.h2")} are only
used when \code{preset="custom"}, otherwise the named preset will
be used as first priority.

To disable the warped hue mechanic, set \code{preset="none"} or define
\code{h1 = h2} so the conversion is always 1:1.

When \code{preset="custom"} and \code{h1} and \code{h2} are not defined, the
preset is set to the value of \code{default_preset}.
}
\examples{
h2hwOptions()
h2hw(60)

h2hwOptions(h1=c(0, 60,120,240,300,360),
   h2=c(0,120,180,240,280,360))
h2hw(300)

}
\seealso{
Other colorjam hue warp: 
\code{\link{approx_degrees}()},
\code{\link{display_degrees}()},
\code{\link{h2hw}()},
\code{\link{hw2h}()},
\code{\link{mean_angle}()}

Other hue warp functions: 
\code{\link{h2hw}()},
\code{\link{hw2h}()}
}
\concept{colorjam hue warp}
\concept{hue warp functions}
