% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorjam-rainbowjam.R
\name{rainbowJam}
\alias{rainbowJam}
\title{rainbow categorical colors using varied luminance and chroma}
\usage{
rainbowJam(
  n = NULL,
  Hstart = 12.2,
  alpha = 1,
  hues = NULL,
  warpHue = NULL,
  preset = c("dichromat", "ryb", "ryb2", "rgb", "none"),
  h1 = NULL,
  h2 = NULL,
  Cvals = c(140, 150, 160, 130, 200, 100),
  Lvals = c(47, 85, 62, 42, 77, 54),
  Crange = NULL,
  Lrange = NULL,
  phase = 1,
  direction = c("1", "-1"),
  do_hue_pad = FALSE,
  hue_pad_percent = 50,
  nameStyle = c("none", "n", "hcl", "color", "closestRcolor"),
  doTest = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{n}{\code{integer} number of categorical colors to return}

\item{Hstart}{\code{numeric} hue to use for the first hue value in the
color sequence. Standard red has a hue 12.2, which is the default.}

\item{alpha}{\code{numeric} alpha transparency of colors, values ranging from
0 to 1. If multiple values are supplied, they are applied in order to
the categorical colors returned.}

\item{hues}{\code{numeric} vector of hues to use, only useful when the
exact hues should be used instead of taking slices along a hue color
wheel. By default, \code{warpHue=FALSE} if not otherwise defined, when
\code{hues} is supplied. However, then \code{warpHue=TRUE} then the \code{hues}
will be adjusted using \code{h2hw()}.}

\item{warpHue}{\code{logical} indicating whether to apply a custom color wheel,
which "warps" the hue using \code{h2hwOptions()}, by applying either
\code{preset}, or specific \code{h1} and \code{h2} arguments.}

\item{preset}{\code{character} string passed to \code{h2hwOptions()} to
define the color wheel, only used when \code{warpHue=TRUE}.}

\item{h1, h2}{\code{numeric} vectors as used by \code{h2hw()} and \code{hw2h()} to
convert from warped hues to standard hues. The default values define
red-yellow-blue (additive) color space, which is converted to
red-green-blue color space to produce the actual R color.}

\item{Cvals, Lvals}{\code{numeric} vector of chroma (C) and luminance (L) values
to be cycled when creating colors along the vector of color hues. These
values are intended to maximize visual distinctiveness of adjacent and
nearly-adjacent colors. For example, varying from bright to dark may
provide additional distinction between two similar color hues.}

\item{Crange, Lrange}{vector of two numeric values which define the allowable
chroma (C) and luminance (L) ranges for \code{Cvals} and \code{Lvals}
parameter values. If supplied, the numeric vector Cvals will be scaled
so the lowest Cvals value maps to the first value in Crange, and the
highest Cvals value maps to the last value in Crange. Varying the
Crange and Lrange values can help produce categorical colors on a
dark or light background, by changing the range of values being used.}

\item{phase}{\code{integer} value which indicates the first value to use
from the sequence of \code{Cvals},\code{Lvals} values, where \code{phase=1} starts
with the first value for each, \code{phase=2} starts with the second
value from each, etc. When \code{phase} is negative, the order of
\code{Cvals} and \code{Lvals} is reversed.}

\item{direction}{\code{character} value indicating the direction to travel
around the color wheel, where \code{"1"} travels forward (red-yellow-blue),
and \code{"-1"} travels in reverse (red-blue-yellow).}

\item{do_hue_pad}{\code{logical} indicating whether to apply padding to
the color hue sequence, intended mainly so the last color hue
in a sequence is less similar to the first color hue in the
sequence.}

\item{hue_pad_percent}{\code{numeric} value between 0 and 100, used when
\code{do_hue_pad} to apply a padding between the first and last color
hues.}

\item{nameStyle}{\code{character} value indicating how to name the output
colors: "none" returns colors with no names; "hcl" assigns names with
the color number prefix, followed by H, C, L values; "colors" names the
vector by the hex color code.}

\item{doTest}{\code{logical} indicating whether to perform a visual test for
the \code{n} number of colors produced, which helps judge the
visual distinctiveness of different combinations of dark and light
colors.}

\item{verbose}{\code{logical} whether to print verbose output}

\item{...}{additional arguments are ignored.}
}
\value{
vector of colors
}
\description{
rainbow categorical colors using varied luminance and chroma
}
\details{
This function customizes similar functions \code{grDevices::rainbow},
\code{\link[colorspace:rainbow_hcl]{colorspace::rainbow_hcl()}}, and \code{\link[scales:hue_pal]{scales::hue_pal()}} in two main
ways:
\enumerate{
\item It uses the warped color wheel (see \code{\link[=h2hw]{h2hw()}} which compresses the
green component of the standard HCL color hue wheel, extending the yellow.
\item It uses a varying luminance and chroma vector which was selected to
optimize visual distinctiveness of adjacent colors. There is still a limit
to the maximum number of effectively different categorical colors, however
this function appears to improve other available methods.
}

This function is also intended to enable use of a custom color wheel,
for example a set of color mappings could define color-blind friendly
ranges of colors when using the warped hue functions \code{\link[=h2hw]{h2hw()}} and
\code{\link[=hw2h]{hw2h()}}. When \code{warpHue=TRUE} the values for \code{h1} and
\code{h2} are used to define a mapping from warped hues to standard
hues recognized by \code{\link[=hcl]{hcl()}}.
}
\examples{
rainbowJam(12);

# show colors
jamba::showColors(rainbowJam(10));

# show colors
color_pie(rainbowJam(10));

# be fancy and label colors using the closest R named color
jamba::showColors(names(rainbowJam(6, nameStyle="closestRcolor")));

}
\seealso{
Other jam color functions: 
\code{\link{closestRcolor}()},
\code{\link{color_pie}()},
\code{\link{group2colors}()},
\code{\link{jam_pal}()},
\code{\link{matrix2heatColors}()},
\code{\link{rainbowJam_v1}()},
\code{\link{scale_color_jam}()},
\code{\link{scale_fill_jam}()},
\code{\link{theme_jam}()},
\code{\link{vals2colorLevels}()}
}
\concept{jam color functions}
