% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colorjam-rainbowjam.R
\name{rainbowJam}
\alias{rainbowJam}
\title{rainbow categorical colors using varied luminance and chroma}
\usage{
rainbowJam(
  n = NULL,
  preset = getOption("colorjam.preset", "dichromat2"),
  step = getOption("colorjam.step", "default"),
  Hstart = 0,
  alpha = 1,
  hues = NULL,
  warpHue = NULL,
  h1 = NULL,
  h2 = NULL,
  Cvals = NULL,
  Lvals = NULL,
  Crange = NULL,
  Lrange = NULL,
  phase = 1,
  direction = c("1", "-1"),
  do_hue_pad = FALSE,
  hue_pad_percent = 0,
  nameStyle = c("none", "n", "closest_named_color", "closestRcolor", "hcl", "color"),
  doTest = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{n}{\code{integer} number of categorical colors to return}

\item{preset}{\code{character} string matching one entry in \code{colorjam_presets()},
which defines the color wheel to use.
define the color wheel, only used when \code{warpHue=TRUE}.}

\item{step}{\code{character} string matching one entry in \code{colorjam_steps()},
which defines the sequence of Chroma and Luminance values across
the range of color hues.}

\item{Hstart}{\code{numeric} hue to use for the first hue value in the
color sequence. This value represents the first color in the color
wheel defined by \code{preset}, and colors are arrayed across 360 degrees.}

\item{alpha}{\code{numeric} alpha transparency of colors, values ranging from
0 to 1. If multiple values are supplied, they are applied in order to
the categorical colors returned.}

\item{hues}{\code{numeric} optional vector with specific hues to use instead
of using \code{Hstart} and filling the 360 degree color wheel with colors.}

\item{warpHue}{\code{logical} (deprecated) formerly to enable or disable the
color warping for custom color wheel.
To disable a custom color wheel use \code{preset="rgb"}.}

\item{h1, h2}{\code{numeric} (deprecated) in favor of argument \code{preset} to
define the \code{h1} and \code{h2} values.
To use custom values for \code{h1} and \code{h2} use \code{add_colorjam_preset()}
to define a new preset name, then use the name with \code{preset}.}

\item{Cvals, Lvals}{\code{numeric} (deprecated) in favor of argument \code{step}
to define the sequence of Chroma and Luminance values.
To define custom values, use \code{add_colorjam_step()} to define a new
step name, then use the name with \code{step}.}

\item{Crange, Lrange}{\code{numeric} optional permitted ranges for
Chroma and Luminance values.
These adjustments may be useful to impose a darker or lighter
set of categorical colors.
\itemize{
\item When any Chroma value is outside the given \code{Crange}, all color Chroma
values are scaled to fit this range using \code{jamba::normScale()}.
This process scales the lowest observed Chroma to the minimum Crange,
and the highest observed Chroma to the maximum Crange, in order to
preserve intermediate gradient values.
\item When any Luminance value is outside the given \code{Lrange}, all color
Luminance values are scaled to fit this range using \code{jamba::normScale()}.
}}

\item{phase}{\code{integer} starting step value to use from the sequence
of Chroma and Luminance values defined by \code{colorjam_steps()}.
\itemize{
\item Default \code{phase=1} begins with the first value; \code{phase=2} begins
with the second value.
\item When \code{phase} is negative, the Chroma and Luminance values are
each reversed, then the absolute value of \code{phase} is used.
For example \code{phase=-1} reverses the sequence, then uses the first value.
So it would begin with the last Chroma value, and the last Luminance
value.
}}

\item{direction}{\code{character} value indicating the direction to travel
around the color wheel, permitting the color wheel to be reversed.
When using \code{direction="-1"} it may also be helpful to use a negative
\code{phase=-1}.
\itemize{
\item \code{"1"} (default) travels forward, clockwise around the color wheel
\item \code{"-1"} travels in reverse, counter-clockwise around the color wheel
}}

\item{do_hue_pad}{\code{logical} indicating whether to apply padding to
the end of the color hue sequence. This padding increases distinction
between the first and last colors.}

\item{hue_pad_percent}{\code{numeric} value between 0 and 100, used when
\code{do_hue_pad=TRUE} to apply a padding between the first and last color
hues.}

\item{nameStyle}{\code{character} string for the style of name assigned:
\itemize{
\item \code{"none"} assigns no names
\item \code{"n"} assigns names in numerical order
\item \code{"closest_named_color"} assigns the closest matching color from
\code{named_colors}, calling \code{closest_named_color()} using \code{...} for
additional arguments.
\item \code{"closestRcolor"} assigns names from \code{closestRcolors()}, using \code{...}
for additional arguments.
\item \code{"hcl"} assigns names using H, C, L values
\item \code{"color"} assigns names by hex color
}}

\item{doTest}{\code{logical} indicating whether to perform a visual test for
\code{n} number of colors produced.}

\item{verbose}{\code{logical} whether to print verbose output}

\item{...}{additional arguments are passed to
\itemize{
\item \code{closest_named_color()} when \code{nameStyle="closest_named_color"}
\item \code{closestRcolor()} when \code{nameStyle="closestRcolor"}
\item \code{jamba::makeNames()} when \code{nameStyle} is anything except \code{"none"}.
}}
}
\value{
\code{character} vector of categorical colors
}
\description{
rainbow categorical colors using varied luminance and chroma
}
\details{
This function customizes similar functions \code{grDevices::rainbow},
\code{\link[colorspace:rainbow_hcl]{colorspace::rainbow_hcl()}}, and \code{\link[scales:hue_pal]{scales::hue_pal()}} in two main
ways:
\enumerate{
\item It uses the warped color wheel (see \code{\link[=h2hw]{h2hw()}} which compresses the
green component of the standard HCL color hue wheel, extending the yellow.
\item It uses a varying luminance and chroma vector which was selected to
optimize visual distinctiveness of adjacent colors. There is still a limit
to the maximum number of effectively different categorical colors, however
this function appears to improve other available methods.
}

This function is also intended to enable use of a custom color wheel,
for example a set of color mappings could define color-blind friendly
ranges of colors when using the warped hue functions \code{\link[=h2hw]{h2hw()}} and
\code{\link[=hw2h]{hw2h()}}. When \code{warpHue=TRUE} the values for \code{h1} and
\code{h2} are used to define a mapping from warped hues to standard
hues recognized by \code{\link[=hcl]{hcl()}}.
}
\examples{
rainbowJam(12);

# show colors
jamba::showColors(rainbowJam(10));

# show colors
color_pie(rainbowJam(10));

# be fancy and label colors using the closest R named color
jamba::showColors(names(rainbowJam(6, nameStyle="closestRcolor")));

# comparison of version 0.0.19.900 and update with version 0.0.20.900
cat19 <- rainbowJam(n=12,
   Cvals=c(140, 150, 160, 130, 200, 100),
   Lvals=c( 47,  85,  62,  42,  77,  54))
cat20 <- rainbowJam(n=12,
   Cvals=c(200, 120, 160,  90, 180, 150),
   Lvals=c( 44,  88,  74,  58,  80,  65))
jamba::showColors(list(version19=cat19, version20=cat20))

}
\seealso{
Other colorjam core: 
\code{\link{blend_colors}()},
\code{\link{closestRcolor}()},
\code{\link{closest_named_color}()},
\code{\link{color_complement}()},
\code{\link{colors_to_df}()},
\code{\link{group2colors}()},
\code{\link{sort_colors}()},
\code{\link{subset_colors}()}
}
\concept{colorjam core}
